@startuml class_back

class PacmanGame {
	- board_manager: BoardManager
	- agent_manager: AgentManager

	+ get_qlearning_state() -> QLearningState
	+ get_cli_state() -> CliState
	+ step(list[Action]) -> None
	- load_board(path: str) --> None, FileNotFoundError
	- can_apply(action: Action) -> bool
	- apply(action: Action) -> None
}

class BoardManager {
	- cells: list[list[Cell]]

	- get_cell(x: int, y: int) --> Cell, PacErrOutOfBoard
	- set_cell(x: int, y: int, Cell) --> None,
}

class AgentManager {
	- agents: dict[Agent]

	+ can_apply(action: Action)
	+ apply(action: Action) -> Agent
	+ get_agent(id: str) --> Agent, PacErrUnknownAgentId
}

enum Cell {
	+ EMPTY = 0
	+ WALL = 1
	+ DOOR = 2
	+ PAC_DOT = 3
	+ PAC_GUM = 4
}

class Agent {
	- id: str
	- x: int
	- y: int

	+ get_position() -> tuple[int, int]
	+ move(direction: Direction) -> None
}

class Pacman {
}

class Ghost {
	- panic: bool
}

enum Direction {
	+ UP: 0
	+ LEFT: 1
	+ DOWN: 2
	+ RIGHT: 3
}

class Action {
	agent_id: str
	direction: Direction
}

exception PacErrOutOfBoard {
}
exception PacErrUnknownAgentId {
}



PacmanGame *-- AgentManager: agent_manager
AgentManager *-- Agent: agents
PacmanGame *-- BoardManager: board
BoardManager +-- Cell: cells
Pacman --|> Agent
Ghost --|> Agent

Action +-r- Direction

BoardManager .. PacErrOutOfBoard
AgentManager .. PacErrUnknownAgentId

@enduml
